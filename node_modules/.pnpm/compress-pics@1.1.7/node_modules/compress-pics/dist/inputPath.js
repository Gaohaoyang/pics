"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFolderPath = void 0;
const inquirer_1 = __importDefault(require("inquirer"));
const inquirer_fuzzy_path_1 = __importDefault(require("inquirer-fuzzy-path"));
const getFolderPath = () => {
    inquirer_1.default.registerPrompt('fuzzyPath', inquirer_fuzzy_path_1.default);
    return inquirer_1.default.prompt([
        {
            type: 'fuzzyPath',
            name: 'path',
            excludePath: (nodePath) => nodePath.startsWith('node_modules') || nodePath.startsWith('.git'),
            // excludePath :: (String) -> Bool
            // excludePath to exclude some paths from the file-system scan
            excludeFilter: (nodePath) => nodePath == '.',
            // excludeFilter :: (String) -> Bool
            // excludeFilter to exclude some paths from the final list, e.g. '.'
            itemType: 'directory',
            // itemType :: 'any' | 'directory' | 'file'
            // specify the type of nodes to display
            // default value: 'any'
            // example: itemType: 'file' - hides directories from the item list
            rootPath: './',
            // rootPath :: String
            // Root search directory
            message: 'Select your images directory:',
            // default: './',
            suggestOnly: false,
            // suggestOnly :: Bool
            // Restrict prompt answer to available choices or use them as suggestions
            depthLimit: 10,
            // depthLimit :: integer >= 0
            // Limit the depth of sub-folders to scan
            // Defaults to infinite depth if undefined
            pageSize: 20,
        },
    ]);
};
exports.getFolderPath = getFolderPath;
